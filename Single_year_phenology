## Libraries ####

library(raster)
library(terra)
library(purrr)
library(furrr)
library(ggridges)
library(tidyverse)


## Functions ####


## Import data ####

setwd("/home/alessio/Tirocinio")


# NDVI_1km <- list.files(pattern = "c_gls_NDVI_", recursive = T) %>%

#  map(~rast(.))


NDVI_300m <- list.files(pattern = "NDVI300_2014", recursive = T) %>%
  
  map(~rast(.))


# select one raster per each month to simplify calculations

NDVI_300m <- NDVI_300m[seq(1, length(NDVI_300m), by = 3)]


#Get only the NDVI layers for NDVI 1km

#NDVI <- list()


#for (i in 1:36) {

#  new_object <- NDVI_1km[[i]]$NDVI

#  NDVI[[paste0("NDVI1km_", i)]] <- new_object   # Add the new object to the list

#}


## Pre-processing ####


# crop the rasters on EU

EU_extent <- ext(-11, 30, 35, 47)


# crop the rasters on IT

IT_extent <- ext(7, 19, 36, 47)

NDVI_300m_crop <- lapply(NDVI_300m, crop, IT_extent)


# Extract NDVI values in a list

values_NDVI_300m <- list()

for (i in 1:12) {
  
  new_object <- terra::as.data.frame(NDVI_300m_crop[[i]])
  
  values_NDVI_300m[[paste0("NDVI_300m_", i)]] <- new_object
  
  values_NDVI_300m[[i]]$month <- as.numeric(paste(i))  # create a column reporting the month of reference for each NDVI value
  
  rm(new_object)
  
}


# Merge list objects into a single dataframe

values_NDVI300_tot <- do.call(rbind, values_NDVI_300m) %>%
  
  subset(NDVI >= 0.2 | is.na(NDVI)) # set the condition excluding uninteresting cover types


# order rows according to month

values_NDVI300_tot <- values_NDVI300_tot[order(values_NDVI300_tot$month), ]


# Change months names and make month a factor variable for the ridgeplot function requirements

values_NDVI300_tot$month <- replace(values_NDVI300_tot$month,
                                    
                                    values_NDVI300_tot$month == 1,
                                    
                                    "January")


# check the varaible levels

unique(values_NDVI300_tot$month)


# turn variable month into a factor

values_NDVI300_tot$month <- as.factor(values_NDVI300_tot$month)


## Ridgeplots ####


# Simple NDVI ridgeplot with quantiles

ridgeplot_NDVI <- ggplot(values_NDVI300_tot, aes(NDVI, month, fill = factor(stat(quantile)))) +
  
  stat_density_ridges(
    
    geom = "density_ridges_gradient", calc_ecdf = TRUE,
    
    quantiles = 4, quantile_lines = TRUE
    
  )


# Gradient ridgeplot type

rm(NDVI_300m, NDVI_300m_crop, values_NDVI_300m)

ridgeplot_NDVI <- ggplot(values_NDVI300_tot, aes(x = `NDVI`, y = month, fill = after_stat(x))) +
  
  geom_density_ridges_gradient(scale = 3, rel_min_height = 0.01, gradient_lwd = 1.) +
  
  scale_x_continuous(expand = c(0, 0)) +
  
  scale_y_discrete(expand = expansion(mult = c(0.01, 0.25))) +
  
  scale_fill_viridis_c(name = "NDVI", option = "C") +
  
  labs(
    title = 'Phenological trend in Italy (2017)',
    subtitle = 'NDVI by month for 2017'
  ) +
  
  theme_ridges(font_size = 13, grid = TRUE) + 
  
  theme(axis.title.y = element_blank())
